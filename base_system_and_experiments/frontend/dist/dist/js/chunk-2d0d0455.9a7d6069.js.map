{"version":3,"sources":["webpack:///./src/components/pages/Console/Templates/DialogCall.vue?28f2","webpack:///src/components/pages/Console/Templates/DialogCall.vue","webpack:///./src/components/pages/Console/Templates/DialogCall.vue?f913","webpack:///./src/components/pages/Console/Templates/DialogCall.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","model","value","callback","$$v","show","expression","staticClass","_v","staticStyle","rttpp","on","startCalling","closeDialog","staticRenderFns","data","dc","iceGatheringLog","iceConnectionLog","signalingLog","recievedMsg","toUserId","time_start","dcInterval","pc","rowque","que","csvf","csvfcount","scInterval","itcount","props","created","success","console","error","clearInterval","components","computed","methods","current_stamp","self","document","navigator","video","width","min","max","height","frameRate","audio","then","stream","alert","channel","resolve","watch","fetchData","component","VBtn","VCard","VCardActions","VCardText","VCardTitle","VCol","VContainer","VDialog","VIcon","VRow","VSpacer","VTextarea"],"mappings":"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","file":"js/chunk-2d0d0455.9a7d6069.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"max-width\":\"1400\",\"fullscreen\":\"\",\"persistent\":\"\"},model:{value:(_vm.show),callback:function ($$v) {_vm.show=$$v},expression:\"show\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"headline\"},[_c('v-icon',{staticClass:\"mr-2\",attrs:{\"color\":\"indigo\"}},[_vm._v(\"mdi-database-check\")]),_vm._v(\" Call to ... \"),_c('v-spacer')],1),_c('v-card-text',[_c('v-container',[_c('v-row',[_c('v-col',{staticClass:\"text-right\"},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',[_vm._v(\"mdi-monitor-off\")])],1)],1)],1),_c('v-row',[_c('v-col',{staticClass:\"text-center\"},[_c('div',{staticStyle:{\"display\":\"block\"},attrs:{\"id\":\"media\"}},[_c('audio',{attrs:{\"id\":\"audio\",\"autoplay\":\"true\"}}),_c('video',{attrs:{\"id\":\"video\",\"autoplay\":\"true\",\"playsinline\":\"true\"}})])])],1),_c('v-row',[_c('v-col',[_c('v-textarea',{attrs:{\"clearable\":\"\",\"height\":\"100%\"},model:{value:(_vm.rttpp),callback:function ($$v) {_vm.rttpp=$$v},expression:\"rttpp\"}})],1)],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{staticClass:\"mr-6\",attrs:{\"fab\":\"\",\"dark\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.startCalling}},[_c('v-icon',[_vm._v(\"mdi-phone-in-talk\")])],1),_c('v-btn',{staticClass:\"ml-6\",attrs:{\"fab\":\"\",\"dark\":\"\",\"color\":\"pink\"},on:{\"click\":_vm.closeDialog}},[_c('v-icon',[_vm._v(\"mdi-phone-off\")])],1),_c('v-spacer')],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-dialog v-model=\"show\" max-width=\"1400\" fullscreen persistent>\r\n        <v-card>\r\n            <v-card-title class=\"headline\">\r\n                <v-icon class=\"mr-2\" color=\"indigo\">mdi-database-check</v-icon>\r\n                Call to ...\r\n                <v-spacer/>\r\n                <!--<v-text-field v-model=\"search\" append-icon=\"mdi-magnify\" label=\"Search\" single-line hide-details />-->\r\n            </v-card-title>\r\n            <v-card-text>\r\n                <v-container>\r\n                    <v-row>\r\n                        <v-col class=\"text-right\">\r\n                            <v-btn icon>\r\n                                <v-icon>mdi-monitor-off</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-row>\r\n                        <v-col class=\"text-center\">\r\n                            <div id=\"media\" style=\"display: block\">\r\n                                <audio id=\"audio\" autoplay=\"true\"></audio>\r\n                                <video id=\"video\" autoplay=\"true\" playsinline=\"true\"></video>\r\n                            </div>\r\n                        </v-col>\r\n                    </v-row>\r\n                    <v-row>\r\n                        <v-col>\r\n                            <v-textarea clearable v-model=\"rttpp\" height=\"100%\"></v-textarea>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-container>\r\n\r\n            </v-card-text>\r\n            \r\n            <v-card-actions>\r\n                \r\n                <v-spacer></v-spacer>\r\n                <!--<span class=\"group mx-2 teal\">-->\r\n                <v-btn \r\n                    class=\"mr-6\"\r\n                    fab\r\n                    dark\r\n                    color=\"primary\"\r\n                    @click=\"startCalling\"\r\n                >\r\n                    <v-icon>mdi-phone-in-talk</v-icon>\r\n                </v-btn>\r\n                <v-btn \r\n                    class=\"ml-6\"\r\n                    fab\r\n                    dark\r\n                    color=\"pink\"\r\n                    @click=\"closeDialog\"\r\n                >\r\n                    <v-icon>mdi-phone-off</v-icon>\r\n                </v-btn>\r\n                <!--</span>-->\r\n                <v-spacer></v-spacer>\r\n\r\n                <!--<v-btn text @click=\"closeDialog\" >Close</v-btn>-->\r\n            </v-card-actions>\r\n        </v-card>\r\n\r\n        \r\n    </v-dialog>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable no-inner-declarations */\r\nexport default {\r\n    data: () => ({\r\n        show: false,\r\n        //pc: null,\r\n        dc: null,\r\n        iceGatheringLog: \"\",\r\n        iceConnectionLog: \"\",\r\n        signalingLog: \"\",\r\n        recievedMsg: null,\r\n        toUserId: null,\r\n        time_start: null,\r\n        dcInterval: null,\r\n        pc: null,\r\n        rttpp: null,\r\n        rowque: \"\",\r\n        que: [],\r\n        csvf: false,\r\n        csvfcount: 0,\r\n        scInterval: null,\r\n        itcount: 0\r\n        //search: \"\"\r\n    }),\r\n    props: [\"duct\", \"opponentId\", \"fetchData\", \"sender\", \"reciever\", \"userId\"],\r\n    created: function(){\r\n        this.duct.invokeOrWaitForOpen(() => {\r\n            this.duct.eventListeners.resource.on(\"addDataForSpecificUser\", {\r\n                success: (data) => {\r\n                    console.log(\"storedData\");\r\n                    console.log(data);\r\n                    //if(!this.reciever) {\r\n                        //this.sender = true;\r\n                        //const args = { \"sender\": true, \"reciever\": false };\r\n                        //this.$emit(\"sr-change\", args);\r\n                    //}\r\n                    //console.log(utf8decoder.decode(data[\"ActiveUserIds\"][0][0]));\r\n                },\r\n                error: (data) => {\r\n                    console.log(data);\r\n                }\r\n            });\r\n            this.duct.eventListeners.resource.on(\"csvWriter\", {\r\n                success: (data) => {\r\n                    console.log(\"csvWriter\");\r\n                    console.log(data);\r\n                    //if(!this.reciever) {\r\n                        //this.sender = true;\r\n                        //const args = { \"sender\": true, \"reciever\": false };\r\n                        //this.$emit(\"sr-change\", args);\r\n                    //}\r\n                    //console.log(utf8decoder.decode(data[\"ActiveUserIds\"][0][0]));\r\n                },\r\n                error: (data) => {\r\n                    console.log(data);\r\n                }\r\n            });\r\n            this.duct.eventListeners.resource.on(\"pingPong\", {\r\n                success: (data) => {\r\n                    console.log('< ' + data[\"pong\"]);\r\n                    this.rttpp += '< ' + data[\"pong\"] + '\\n';\r\n\r\n                    if (data[\"pong\"].substring(0, 4) === 'pong') {\r\n                        var elapsed_ms = self.current_stamp() - parseInt(data[\"pong\"].substring(5), 10);\r\n                        console.log(' RTT ' + elapsed_ms + ' ms');\r\n                        this.rttpp += ' RTT ' + elapsed_ms + ' ms' + '\\n';\r\n                        this.rowque += data[\"pong\"].substring(5) + \",\" + elapsed_ms + \";\";\r\n                        this.csvfcount++;\r\n                        if(this.csvfcount > 10) {\r\n                            this.csvf = !self.csvf;\r\n                            this.csvfcount = 0;\r\n                            this.itcount++;\r\n                        }\r\n                    }\r\n                    if (this.itcount > 113) {\r\n                        clearInterval(this.scInterval);\r\n                    }\r\n                },\r\n                error: (data) => {\r\n                    console.log(data);\r\n                }\r\n            });\r\n        });\r\n        //let self = this;\r\n        //this.scInterval = setInterval(function() {\r\n            //var message = 'ping ' + self.current_stamp();\r\n            //console.log('> ' + message);\r\n            //self.duct.controllers.resource.pingPong(message);\r\n        //}, 1000);\r\n        //this.que.push(this.rowque);\r\n        /*let self = this;\r\n        const config = {\r\n            \"iceServers\": [\r\n                { \"urls\": \"stun:stun.l.google.com:19302\" },\r\n                { \"urls\": \"stun:stun1.l.google.com:19302\" },\r\n                { \"urls\": \"stun:stun2.l.google.com:19302\" },\r\n            ]\r\n        }\r\n        this.pc = new RTCPeerConnection(config);\r\n\r\n        // register some listeners to help debugging\r\n        this.pc.addEventListener('icegatheringstatechange', function() {\r\n            self.iceGatheringLog += ' -> ' + self.pc.iceGatheringState;\r\n            console.log(self.iceGatheringLog);\r\n        }, false);\r\n        this.iceGatheringLog = this.pc.iceGatheringState;\r\n\r\n        this.pc.addEventListener('iceconnectionstatechange', function() {\r\n            self.iceConnectionLog += ' -> ' + self.pc.iceConnectionState;\r\n            console.log(self.iceConnectionLog);\r\n        }, false);\r\n        this.iceConnectionLog = this.pc.iceConnectionState;\r\n\r\n        this.pc.addEventListener('signalingstatechange', function() {\r\n            self.signalingLog += ' -> ' + self.pc.signalingState;\r\n            console.log(self.signalingLog);\r\n        }, false);\r\n        this.signalingLog = this.pc.signalingState;\r\n\r\n        this.pc.addEventListener('track', function(evt) {\r\n            if (evt.track.kind == 'video')\r\n                document.getElementById('video').srcObject = evt.streams[0];\r\n            else\r\n                document.getElementById('audio').srcObject = evt.streams[0];\r\n        });*/\r\n\r\n        //console.log(navigator);\r\n        //this.getMediaStream();\r\n        \r\n        /*navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then(function(stream) {\r\n            stream.getTracks().forEach(function(track) {\r\n                self.pc.addTrack(track, stream);\r\n            });\r\n            }, function(err) {\r\n                alert('Could not acquire media: ' + err);\r\n        });*/\r\n\r\n    },\r\n    components: {\r\n        \r\n    },\r\n    computed: {\r\n        \r\n    },\r\n    methods: {\r\n        current_stamp() {\r\n            if (this.time_start === null) {\r\n                this.time_start = new Date().getTime();\r\n                return 0;\r\n            } else {\r\n                return new Date().getTime() - this.time_start;\r\n            }\r\n        },\r\n        closeDialog() {\r\n            this.pc.close();\r\n            const args = { \"sender\": false, \"reciever\": false };\r\n            this.$emit(\"sr-change\", args);\r\n            this.duct.controllers.resource.addDataForSpecificUser(localStorage.getItem(\"userId\"), localStorage.getItem(\"userId\"), \"{token:'terminate'}\");\r\n            this.duct.controllers.resource.fetchDataFromSpecificUser(localStorage.getItem(\"userId\"), localStorage.getItem(\"clientToken\"));\r\n            this.show = false;\r\n        },\r\n        startCalling() {\r\n            let self = this;\r\n            this.rttpp = \"HELLO\\n\";\r\n\r\n            const config = {\r\n            \"iceServers\": [\r\n                { \"urls\": \"stun:stun.l.google.com:19302\" },\r\n                //{ \"urls\": \"stun:stun1.l.google.com:19302\" },\r\n                //{ \"urls\": \"stun:stun2.l.google.com:19302\" },\r\n            ]\r\n            }\r\n            this.pc = new RTCPeerConnection(config);\r\n\r\n            // register some listeners to help debugging\r\n            this.pc.addEventListener('icegatheringstatechange', function() {\r\n                self.iceGatheringLog += ' -> ' + self.pc.iceGatheringState;\r\n                console.log(self.iceGatheringLog);\r\n            }, false);\r\n            this.iceGatheringLog = this.pc.iceGatheringState;\r\n\r\n            this.pc.addEventListener('iceconnectionstatechange', function() {\r\n                self.iceConnectionLog += ' -> ' + self.pc.iceConnectionState;\r\n                console.log(self.iceConnectionLog);\r\n            }, false);\r\n            this.iceConnectionLog = this.pc.iceConnectionState;\r\n\r\n            this.pc.addEventListener('signalingstatechange', function() {\r\n                self.signalingLog += ' -> ' + self.pc.signalingState;\r\n                console.log(self.signalingLog);\r\n            }, false);\r\n            this.signalingLog = this.pc.signalingState;\r\n\r\n            /*this.pc.addEventListener('track', function(evt) {\r\n            if (evt.track.kind == 'video')\r\n                document.getElementById('video').srcObject = evt.streams[0];\r\n            else\r\n                document.getElementById('audio').srcObject = evt.streams[0];\r\n            });*/\r\n            this.pc.addEventListener('track', function(evt) {\r\n                if (evt.track.kind == 'video') {\r\n                    document.getElementById('video').srcObject = evt.streams[0];\r\n                }\r\n                else{\r\n                    document.getElementById('audio').srcObject = evt.streams[0];\r\n                }\r\n            });\r\n            navigator.mediaDevices.getUserMedia({ video: {\r\n                width: {\r\n                    min: 320,\r\n                    max: 1280\r\n                },height: {\r\n                    min: 240,\r\n                    max: 720\r\n                },frameRate: {\r\n                    min: 1,\r\n                    max: 10\r\n                }\r\n            }, audio: true }).then(function(stream) {\r\n                stream.getTracks().forEach(function(track) {\r\n                    self.pc.addTrack(track, stream);\r\n                });\r\n                }, function(err) {\r\n                    alert('Could not acquire media: ' + err);\r\n            });\r\n\r\n\r\n            if(!this.reciever) {\r\n                console.log(\"gggg\");\r\n                this.time_start = null;\r\n                this.dc = this.pc.createDataChannel('chat', {\"ordered\":true});\r\n                this.dc.onclose = function() {\r\n                    clearInterval(this.dcInterval);\r\n                    console.log('- close');\r\n                };\r\n                this.dc.onopen = function() {\r\n                    //var self = this;\r\n                    console.log('- open');\r\n                    this.dcInterval = setInterval(function() {\r\n                        var message = 'ping ' + self.current_stamp();\r\n                        console.log('> ' + message);\r\n                        self.rttpp += '> ' + message + '\\n';\r\n                        self.dc.send(message);\r\n                    }, 1000);\r\n                };\r\n                this.dc.onmessage = function(evt) {\r\n                    //var self = this;\r\n                    console.log('< ' + evt.data);\r\n                    self.rttpp += '< ' + evt.data + '\\n';\r\n\r\n                    if (evt.data.substring(0, 4) === 'pong') {\r\n                        var elapsed_ms = self.current_stamp() - parseInt(evt.data.substring(5), 10);\r\n                        console.log(' RTT ' + elapsed_ms + ' ms');\r\n                        self.rttpp += ' RTT ' + elapsed_ms + ' ms' + '\\n';\r\n                        self.rowque += evt.data.substring(5) + \",\" + elapsed_ms + \";\";\r\n                        self.csvfcount++;\r\n                        if(self.csvfcount > 10) {\r\n                            self.csvf = !self.csvf;\r\n                            self.csvfcount = 0;\r\n                        }\r\n                    }\r\n                };\r\n            } else {\r\n                this.pc.ondatachannel = function(event) {\r\n                    var channel = event.channel;\r\n                        channel.onopen = function(event) {\r\n                        console.log(\"Hello Back! \"+event.data);\r\n                    }\r\n                    channel.onmessage = function(event) {\r\n                        console.log(event.data);\r\n                        channel.send('pong '+event.data.substring(5));\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(this.reciever) {\r\n                console.log(this.fetchData);\r\n                if(this.fetchData[\"Message\"] == \"{token:'terminate'}\") {\r\n                console.log(\"terminate2\");\r\n                }\r\n                else {\r\n                    //let self = this;\r\n                    this.recievedMsg = this.fetchData[\"Message\"];\r\n                    this.toUserId = this.fetchData[\"FromUserId\"];\r\n                    if(!this.sender) {\r\n                        //this.reciever = true;\r\n                    }\r\n                    console.log(this.recievedMsg);\r\n                    console.log(JSON.parse(this.recievedMsg));\r\n                    this.pc.setRemoteDescription(JSON.parse(this.recievedMsg));\r\n\r\n                    /*if(this.reciever) {\r\n                        console.log(\"answer\");\r\n                        this.pc.createAnswer().then((answer) => {\r\n                            console.log(answer);\r\n                            //console.log(JSON.stringify(offer));\r\n                            //console.log(typeof answer);\r\n                            return self.pc.setLocalDescription(answer);\r\n                        }).then(function() {\r\n                            var answer = self.pc.localDescription;\r\n                            \r\n                            self.duct.controllers.resource.addDataForSpecificUser(toUserId, self.userId, JSON.stringify(answer));\r\n                        });\r\n                    }*/\r\n\r\n                }\r\n                //let self = this;\r\n                console.log(\"answer\");\r\n                this.pc.createAnswer().then((answer) => {\r\n                    console.log(answer);\r\n                    //console.log(JSON.stringify(offer));\r\n                    //console.log(typeof answer);\r\n                    return self.pc.setLocalDescription(answer);\r\n                }).then(function() {\r\n                    var answer = self.pc.localDescription;\r\n                    \r\n                    self.duct.controllers.resource.addDataForSpecificUser(self.toUserId, self.userId, JSON.stringify(answer));\r\n                });\r\n            } else {\r\n\r\n                if(!this.reciever) {\r\n                    //this.sender = true;\r\n                    const args = { \"sender\": true, \"reciever\": false };\r\n                    this.$emit(\"sr-change\", args);\r\n                }\r\n\r\n                console.log(this.opponentId);\r\n                //this.duct.controllers.resource.addDataForSpecificUser(this.opponentId, localStorage.getItem(\"userId\"), \"{MSG:'JSON.stringify(offer)'}\");\r\n                \r\n                //let self = this;\r\n                this.pc.createOffer().then((offer) => {\r\n                console.log(\"offer\");\r\n                console.log(offer);\r\n                //console.log(JSON.stringify(offer));\r\n                //console.log(typeof offer);\r\n                return self.pc.setLocalDescription(offer);\r\n\r\n                //console.log(typeof JSON.stringify(offer));\r\n                //this.duct.controllers.resource.addDataForSpecificUser(toUserId, this.userId, JSON.stringify(offer));\r\n                }).then(function() {\r\n                    // wait for ICE gathering to complete\r\n                    return new Promise(function(resolve) {\r\n                        if (self.pc.iceGatheringState === 'complete') {\r\n                            resolve();\r\n                        } else {\r\n                            function checkState() {\r\n                                if (self.pc.iceGatheringState === 'complete') {\r\n                                    self.pc.removeEventListener('icegatheringstatechange', checkState);\r\n                                    resolve();\r\n                                }\r\n                            }\r\n                            self.pc.addEventListener('icegatheringstatechange', checkState);\r\n                        }\r\n                    });\r\n                }).then(function() {\r\n                    var offer = self.pc.localDescription;\r\n                    self.duct.controllers.resource.addDataForSpecificUser(self.opponentId, self.userId, JSON.stringify(offer));\r\n                });\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        fetchData() {\r\n            if(!this.reciever) {\r\n                console.log(this.fetchData);\r\n                if(this.fetchData[\"Message\"] == \"{token:'terminate'}\") {\r\n                console.log(\"terminate2\");\r\n                }\r\n                else {\r\n                    //let self = this;\r\n                    this.recievedMsg = this.fetchData[\"Message\"];\r\n                    this.toUserId = this.fetchData[\"FromUserId\"];\r\n                    if(!this.sender) {\r\n                        //this.reciever = true;\r\n                    }\r\n                    console.log(this.recievedMsg);\r\n                    console.log(JSON.parse(this.recievedMsg));\r\n                    this.pc.setRemoteDescription(JSON.parse(this.recievedMsg));\r\n\r\n                    /*if(this.reciever) {\r\n                        console.log(\"answer\");\r\n                        this.pc.createAnswer().then((answer) => {\r\n                            console.log(answer);\r\n                            //console.log(JSON.stringify(offer));\r\n                            //console.log(typeof answer);\r\n                            return self.pc.setLocalDescription(answer);\r\n                        }).then(function() {\r\n                            var answer = self.pc.localDescription;\r\n                            \r\n                            self.duct.controllers.resource.addDataForSpecificUser(toUserId, self.userId, JSON.stringify(answer));\r\n                        });\r\n                    }*/\r\n\r\n                }\r\n            }\r\n        },\r\n        \r\n        csvf() {\r\n            this.duct.controllers.resource.csvWriter([this.rowque]);\r\n            this.rowque = \"\";\r\n        }\r\n        \r\n    }\r\n}\r\n/* eslint-disable no-inner-declarations */\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DialogCall.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DialogCall.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DialogCall.vue?vue&type=template&id=6806d23c&\"\nimport script from \"./DialogCall.vue?vue&type=script&lang=js&\"\nexport * from \"./DialogCall.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VCol,VContainer,VDialog,VIcon,VRow,VSpacer,VTextarea})\n"],"sourceRoot":""}